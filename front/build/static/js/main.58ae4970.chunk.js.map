{"version":3,"sources":["images/logos/logoWhiteRed.png","pages/NotFoundPage.js","pages/LoginPage.js","pages/SignUpPage.js","pages/HomePage.js","App.js","index.js"],"names":["module","exports","NotFoundPage","to","React","Component","LoginPage","props","signOut","localStorage","setItem","handleLogin","event","preventDefault","setState","loading","state","email","toLowerCase","trim","length","password","error","axios","post","then","response","data","message","secretKey","secret","redirect","handleEmailChange","target","value","handlePasswordChange","bind","this","className","type","color","height","width","Navbar","style","textDecoration","onSubmit","placeholder","onChange","src","logoWhiteRed","alt","SignUpPage","handleSignUp","confirmPassword","handleConfirmPasswordChange","HomePage","handleDateChange","modalDate","handleTitleChange","modalTitle","updateTimers","getTimers","undefined","getItem","timers","alert","createTimer","timerTitle","timerDate","window","location","reload","autoLogin","interval","setInterval","handleOpenModal","showModal","handleCloseModal","Date","clearInterval","onClick","isOpen","contentLabel","overlayClassName","onRequestClose","shouldCloseOnOverlayClick","map","timer","curDate","delta","Math","abs","dDays","floor","dHours","dMinutes","dSeconds","round","App","document","title","exact","path","component","render","querySelector"],"mappings":"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","file":"static/js/main.58ae4970.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logoWhiteRed.9d2eda86.png\";","import React from 'react'\nimport { Redirect } from 'react-router-dom'\n\nclass NotFoundPage extends React.Component {\n  render() {\n    return <Redirect to='/'/>\n  }\n}\n\nexport default NotFoundPage\n","import React from 'react'\nimport Loader from 'react-loader-spinner'\nimport axios from 'axios'\nimport { Link, Redirect } from 'react-router-dom'\nimport '../styles/LoginPage.css'\nimport logoWhiteRed from '../images/logos/logoWhiteRed.png'\n\nclass LoginPage extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      loading: false,\n      redirect: false,\n      email: '',\n      password: '',\n      error: ''\n    }\n\n    this.handleEmailChange = this.handleEmailChange.bind(this)\n    this.handlePasswordChange = this.handlePasswordChange.bind(this)\n  }\n\n  signOut = () => {\n    localStorage.setItem('email', null)\n    localStorage.setItem('secretKey', null)\n  }\n\n  handleLogin = (event) => {\n    event.preventDefault()\n\n    this.setState({loading: true})\n\n    if(this.state.email.toLowerCase().trim().length <= 0 || this.state.password.length <= 0) {\n      this.setState({loading: false, error: 'fields cannot be blank'})\n    }\n    else {\n      axios.post('/loginRequest', {\n        email: this.state.email.toLowerCase().trim(),\n        password: this.state.password\n      })\n      .then((response) => {\n        if(response.data.message === 'success') {\n          const secretKey = response.data.secret\n          localStorage.setItem('secretKey', secretKey)\n          localStorage.setItem('email', this.state.email.toLowerCase().trim())\n          this.setState({redirect: true})\n        }\n        else {\n          this.setState({error: response.data.message})\n        }\n\n        this.setState({loading: false})\n      },\n      (error) => {\n        this.setState({loading: false, error: error})\n      })\n    }\n  }\n\n  handleEmailChange = (event) => {\n    this.setState({email: event.target.value})\n  }\n\n  handlePasswordChange = (event) => {\n    this.setState({password: event.target.value})\n  }\n\n  componentDidMount() {\n    this.signOut()\n  }\n\n  render() {\n    const { redirect, loading } = this.state\n\n    if(loading) {\n      return (\n        <div className='flexContainer primaryColor'>\n          <div className='loader'>\n            <Loader\n              type='Bars'\n              color='white'\n              height={100}\n              width={100}\n            />\n          </div>\n        </div>\n      )\n    }\n    else if (redirect) {\n      return <Redirect to='/'/>\n    }\n    else {\n      const Navbar = () => (\n        <div className='navbar'>\n          <div className='navbar-item clickable bottomBorder'>\n            Login\n          </div>\n\n          <Link to=\"/signup\" className='navbar-item clickable noBottomBorder' style={{ textDecoration: 'none' }} >\n            Sign Up\n          </Link>\n        </div>\n      )\n\n      return (\n        <div className='flexContainer'>\n          <div className='halfColumn primaryColor centerColumnItems'>\n            <h1 className='logoTitle'>TOKTOK</h1>\n            <h2 className='logoSubtitle'>keep track of everything</h2>\n          </div>\n\n          <div className='halfColumn'>\n            <div className='loginFormContainer'>\n              <Navbar/>\n              <form onSubmit={this.handleLogin} className='form'>\n                <input className='emailInput' type='email' placeholder='Email' onChange={this.handleEmailChange}></input>\n                <input className='passwordInput' type='password' placeholder='Password' onChange={this.handlePasswordChange}></input>\n                <div className='error'>{this.state.error}</div>\n                <input className='loginBtn clickable' type='submit' value='SIGN IN'></input>\n              </form>\n            </div>\n          </div>\n\n          <img className='logoImage' src={logoWhiteRed} alt='logo'></img>\n        </div>\n      )\n    }\n  }\n}\n\nexport default LoginPage\n","import React from 'react'\nimport Loader from 'react-loader-spinner'\nimport axios from 'axios'\nimport { Link, Redirect } from 'react-router-dom'\nimport '../styles/LoginPage.css'\nimport logoWhiteRed from '../images/logos/logoWhiteRed.png'\n\nclass SignUpPage extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      loading: false,\n      redirect: false,\n      email: '',\n      password: '',\n      confirmPassword: '',\n      error: ''\n    }\n\n    this.handleEmailChange = this.handleEmailChange.bind(this)\n  }\n\n  signOut = () => {\n    localStorage.setItem('email', null)\n    localStorage.setItem('secretKey', null)\n  }\n\n  handleSignUp = (event) => {\n    event.preventDefault()\n\n    this.setState({loading: true})\n\n    if(this.state.email.toLowerCase().trim().length <= 0 || this.state.password.length <= 0) {\n      this.setState({loading: false, error: 'fields cannot be blank'})\n    }\n    else if(this.state.password.length <= 5) {\n      this.setState({loading: false, error: 'password must be at least 6 characters long'})\n    }\n    else if(this.state.password !== this.state.confirmPassword) {\n      this.setState({loading: false, error: 'passwords do not match'})\n    }\n    else {\n      axios.post('/signupRequest', {\n        email: this.state.email.toLowerCase().trim(),\n        password: this.state.password\n      })\n      .then((response) => {\n        if(response.data.message === 'success') {\n          const secretKey = response.data.secret\n          localStorage.setItem('secretKey', secretKey)\n          localStorage.setItem('email', this.state.email.toLowerCase().trim())\n          this.setState({redirect: true})\n        }\n        else {\n          this.setState({error: response.data.message})\n        }\n\n        this.setState({loading: false})\n      },\n      (error) => {\n        this.setState({loading: false, error: error})\n      })\n    }\n\n  }\n\n  handleEmailChange = (event) => {\n    this.setState({email: event.target.value})\n  }\n\n  handlePasswordChange = (event) => {\n    this.setState({password: event.target.value})\n  }\n\n  handleConfirmPasswordChange = (event) => {\n    this.setState({confirmPassword: event.target.value})\n  }\n\n  componentDidMount() {\n    this.signOut()\n  }\n\n  render() {\n    const { redirect, loading } = this.state\n\n    if(loading) {\n      return (\n        <div className='flexContainer primaryColor'>\n          <div className='loader'>\n            <Loader\n              type='Bars'\n              color='white'\n              height={100}\n              width={100}\n            />\n          </div>\n        </div>\n      )\n    }\n    else if (redirect) {\n      return <Redirect to='/'/>\n    }\n    else {\n      const Navbar = () => (\n        <div className='navbar'>\n\n          <Link to=\"/login\" className='navbar-item clickable noBottomBorder' style={{ textDecoration: 'none' }} >\n            Login\n          </Link>\n\n          <div className='navbar-item clickable bottomBorder'>\n            Sign Up\n          </div>\n        </div>\n      )\n\n      return (\n        <div className='flexContainer'>\n          <div className='halfColumn primaryColor centerColumnItems'>\n            <h1 className='logoTitle'>TOKTOK</h1>\n            <h2 className='logoSubtitle'>keep track of everything</h2>\n          </div>\n\n          <div className='halfColumn'>\n            <div className='loginFormContainer'>\n              <Navbar/>\n              <form onSubmit={this.handleSignUp} className=\"form\">\n                <input className='emailInput' type='email' placeholder='Email' onChange={this.handleEmailChange}></input>\n                <input className='passwordInput' type='password' placeholder='Password' onChange={this.handlePasswordChange}></input>\n                <input className='passwordInput' type='password' placeholder='Confirm password' onChange={this.handleConfirmPasswordChange}></input>\n                <div className='error'>{this.state.error}</div>\n                <input className='loginBtn clickable' type='submit' value='SIGN UP'></input>\n              </form>\n            </div>\n          </div>\n\n          <img className='logoImage' src={logoWhiteRed} alt='logo'></img>\n        </div>\n      )\n    }\n  }\n}\n\nexport default SignUpPage\n","import React from 'react'\nimport Loader from 'react-loader-spinner'\nimport Modal from 'react-modal'\nimport axios from 'axios'\nimport { Link, Redirect } from 'react-router-dom'\nimport '../styles/HomePage.css'\n\nclass HomePage extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      redirect: false,\n      loading: true,\n      timers: [],\n      showModal: false,\n      modalTitle: '',\n      modalDate: new Date()\n    }\n\n    this.handleDateChange = this.handleDateChange.bind(this)\n    this.handleTitleChange = this.handleTitleChange.bind(this)\n  }\n\n  handleDateChange = (event) => {\n    this.setState({modalDate: event.target.value})\n  }\n\n  handleTitleChange = (event) => {\n    this.setState({modalTitle: event.target.value})\n  }\n\n  updateTimers = () => {\n    this.setState({})\n  }\n\n  getTimers = () => {\n    if(localStorage.getItem('email') !== undefined) {\n      axios.post('/getTimers', {\n        email: localStorage.getItem('email')\n      })\n      .then((response) => {\n        if(response.data.message === 'success') {\n          this.setState({timers: response.data.timers, loading: false})\n        }\n        else {\n          alert('failure!')\n          this.setState({loading: false})\n        }\n      },\n      (error) => {\n        this.setState({loading: false})\n        alert(error)\n      })\n    }\n    else {\n      this.setState({redirect:true, loading: false})\n    }\n  }\n\n  createTimer = () => {\n    this.setState({loading: true})\n\n    axios.post('/createTimer', {\n      email: localStorage.getItem('email'),\n      timerTitle: this.state.modalTitle,\n      timerDate: this.state.modalDate\n    })\n    .then((response) => {\n      if(response.data.message === 'success') {\n        window.location.reload(false)\n      }\n      else {\n        alert(response.data.message)\n        this.setState({loading: false})\n      }\n    },\n    (error) => {\n      this.setState({loading: false})\n    })\n  }\n\n  autoLogin = () => {\n    axios.post('/verifyCredentials', {\n      email: localStorage.getItem('email'),\n      secretKey: localStorage.getItem('secretKey')\n    })\n    .then((response) => {\n      if(response.data.message !== 'success') {\n        this.setState({loading: false, redirect: true})\n      }\n      else {\n        this.getTimers()\n\n        this.interval = setInterval(this.updateTimers, 1000)\n      }\n    },\n    (error) => {\n      this.setState({loading: false})\n    })\n  }\n\n  signOut = () => {\n    localStorage.setItem('email', null)\n    localStorage.setItem('secretKey', null)\n    this.setState({redirect: true})\n  }\n\n  handleOpenModal = () => {\n    this.setState({ showModal: true });\n  }\n\n  handleCloseModal = () => {\n    this.setState({ showModal: false });\n  }\n\n  componentDidMount() {\n    this.autoLogin()\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  render() {\n    const { redirect, loading } = this.state\n\n    if(loading) {\n      return (\n        <div className='flexContainer primaryColor'>\n          <div className='loader'>\n            <Loader\n              type='Bars'\n              color='white'\n              height={100}\n              width={100}\n            />\n          </div>\n        </div>\n      )\n    }\n    else if (redirect) {\n      return <Redirect to='/login'/>\n    }\n    else {\n      return (\n        <div className='flexContainer centerFlex primaryColor topOffset'>\n          <button className='addCounterBtn' onClick={this.handleOpenModal}>Add New Counter</button>\n\n          <Modal isOpen={this.state.showModal} contentLabel='Minimal Modal Example' className='Modal' overlayClassName='Overlay' onRequestClose={this.handleCloseModal} shouldCloseOnOverlayClick={true}>\n            <input className='modalTitleInput' type='text' placeholder='Event Name' onChange={this.handleTitleChange}></input>\n            <input className='modalDateInput' type='date' placeholder='Date' onChange={this.handleDateChange}></input>\n\n            <button onClick={this.createTimer} className='createCounterBtn'>Create Timer</button>\n          </Modal>\n\n          {this.state.timers.map(timer => {\n            const curDate = new Date()\n            const timerDate = new Date(timer.timerDate)\n            const timerTitle = timer.timerTitle\n\n            let delta = Math.abs(curDate - timerDate) / 1000\n            const dDays = Math.floor(delta / 86400)\n            delta -= dDays * 86400\n            const dHours = Math.floor(delta / 3600) % 24\n            delta -= dHours * 3600\n            const dMinutes = Math.floor(delta / 60) % 60\n            delta -= dMinutes * 60\n            const dSeconds = Math.round(delta % 60)\n\n            if(curDate >= timerDate && dDays < 1) {\n              return (\n                <div className='timerBox'>\n                  <h2>{timerTitle}</h2>\n                  <h1 className='doneTimerText'>TODAY</h1>\n                </div>\n              )\n            }\n            else if(curDate >= timerDate) {\n              return (\n                <div className='timerBox'>\n                  <h2>{timerTitle}</h2>\n                  <h1 className='doneTimerText'>PASSED</h1>\n                </div>\n              )\n            }\n            else {\n              return (\n                <div className='timerBox'>\n                  <h2>{timerTitle}</h2>\n                  <h1>{dDays}</h1>\n                  <p>days</p>\n                  <div className='timerBoxCountdowns'>\n                    <div className='countdown'>\n                      <h1>{dHours}</h1>\n                      <p>hours</p>\n                    </div>\n\n                    <div className='countdown'>\n                      <h1>{dMinutes}</h1>\n                      <p>minutes</p>\n                    </div>\n\n                    <div className='countdown'>\n                      <h1>{dSeconds}</h1>\n                      <p>seconds</p>\n                    </div>\n                  </div>\n                </div>\n              )\n            }\n\n          })}\n\n        </div>\n      )\n    }\n  }\n}\n\nexport default HomePage\n","import React from 'react'\nimport { Route, Switch } from 'react-router-dom'\nimport { Redirect } from 'react-router'\n\nimport NotFoundPage from './pages/NotFoundPage'\nimport LoginPage from './pages/LoginPage'\nimport SignUpPage from './pages/SignUpPage'\nimport HomePage from './pages/HomePage'\n\nclass App extends React.Component {\n  componentDidMount() {\n    document.title = 'TokTok'\n  }\n\n  render() {\n    return (\n      <Switch>\n        <Route exact path=\"/login\" component={LoginPage} />\n        <Route exact path=\"/signup\" component={SignUpPage} />\n        <Route exact path=\"/\" component={HomePage} />\n        <Route path=\"*\" component={NotFoundPage} />\n      </Switch>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport App from './App'\nimport './styles/global.css'\n\nrender(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.querySelector('#root')\n)\n"],"sourceRoot":""}